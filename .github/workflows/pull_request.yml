name: Pull Request Workflow

on: [pull_request]

jobs:
  pull_request:
    name: Pull Request Workflow
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16-alpine
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: djangifylab
          POSTGRES_USER: django
          POSTGRES_PASSWORD: django
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          if [ -d "venv" ]; then rm -rf venv; fi
          python3 -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install flake8==7.3.0 black==25.1.0 isort==6.0.1 pytest==8.4.1
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Black linter
        run: |
          source venv/bin/activate
          black --config .github/configurations/python_linters/.black .
      - name: Flake8 linter
        run: |
          source venv/bin/activate
          flake8 . --show-source --config ${GITHUB_WORKSPACE}/.github/configurations/python_linters/.flake8
      - name: Isort linter
        run: |
          source venv/bin/activate
          isort --sp .github/configurations/python_linters/.isort.cfg --profile black .
      
      - name: Build all required Docker images
        run: docker-compose -f docker-compose.override.yml build postgres upgrade-runner app-installer

      - name: Start dependent services (postgres)
        run: docker-compose -f docker-compose.override.yml up -d postgres

      - name: Run upgrade-runner container
        run: docker-compose -f docker-compose.override.yml run --rm upgrade-runner

      - name: Run app-installer container
        run: docker-compose -f docker-compose.override.yml run --rm app-installer

      - name: Stop all containers
        run: docker-compose -f docker-compose.override.yml down

      - name: Python tests
        run: |
          source venv/bin/activate
          pytest tests/

      - name: Install Django example apps from archives
        run: |
          source venv/bin/activate
          for archive in example-apps/*.{tar.gz,tar.xz}; do
            if [ -f "$archive" ]; then
              echo "Installing $archive"
              pip install "$archive"
            fi
          done

      - name: Check for model changes (makemigrations)
        run: |
          source venv/bin/activate
          python manage.py makemigrations --check --dry-run

      - name: Test migration plan
        run: |
          source venv/bin/activate
          python manage.py migrate --plan