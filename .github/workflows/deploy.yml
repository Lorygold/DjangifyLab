name: Deploy New Version

on:
  pull_request:
    types:
      - closed
    branches:
      - main

jobs:
  deploy:
    if: |
      github.event.pull_request.merged == true &&
      github.event.pull_request.base.ref == 'main' &&
      github.event.pull_request.head.ref == 'develop'
    runs-on: ubuntu-latest

    steps:
      - name: Check version format
        id: version_check
        run: |
          VERSION="${{ github.event.pull_request.title }}"
          echo "Pull request title: $VERSION"
          if [[ "$VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Valid semver version"
            echo "VERSION=$VERSION" >> $GITHUB_ENV
            echo "valid=true" >> $GITHUB_OUTPUT
          else
            echo "Invalid version format: '$VERSION'. Skipping tag."
            echo "valid=false" >> $GITHUB_OUTPUT
          fi

      - name: Checkout code
        if: steps.version_check.outputs.valid == 'true'
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_PAT }}

      - name: Create Git Tag
        if: steps.version_check.outputs.valid == 'true'
        run: |
          git remote set-url origin https://x-access-token:${{ secrets.GH_PAT }}@github.com/Lorygold/DjangifyLab.git
          git fetch --tags
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git tag -a "v${{ env.VERSION }}" -m "Release version ${{ env.VERSION }}"
          git push origin "v${{ env.VERSION }}"

      - name: Create GitHub Release
        if: steps.version_check.outputs.valid == 'true'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "v${{ env.VERSION }}"
          name: "Version v${{ env.VERSION }}"
          draft: false
          generate_release_notes: true
          prerelease: false
          target_commitish: ${{ github.event.pull_request.base.ref }}
          append_body: true
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
